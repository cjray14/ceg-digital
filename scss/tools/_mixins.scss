@mixin grid-max-container {
  position: relative;

  max-width: 1200px;
  margin-right: auto;
  margin-left: auto;
  padding-right: 50px;
  padding-left: 50px;
}

@mixin grid-full-container {
  position: relative;

  padding-right: 30px;
  padding-left: 30px;
}

@mixin reset-lists {
  margin: 0;
  padding: 0;

  list-style: none;
}

@mixin vertical-spacer {
  margin-top: 65px;
  margin-bottom: 65px;
}

@mixin page-header-title {

  max-width: 725px;
  margin-right: auto;
  margin-left: auto;

  font-size: 60px;
  font-weight: $font-weight-semibold;
  letter-spacing: -0.75px;
  line-height: 60px;

  color: $color-primary;
}

@mixin page-header-text {
  margin-top: 30px;

  font-size: 12px;
  font-weight: $font-weight-semibold;
  letter-spacing: 3.6px;
  line-height: 16px;
  text-transform: uppercase;

  color: $color-secondary;
}

@mixin button-primary {
  padding: 20px 30px 17px;

  font-size: 12px;
  font-weight: $font-weight-semibold;
  letter-spacing: 3.6px;
  text-transform: uppercase;

  background-color: $color-primary;
  border: 0;
  color: #fff;

  cursor: pointer;
}

@mixin visually-hidden() {
  // stylelint-disable-next-line
  position: absolute !important;

  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;

  border: 0;
  clip: rect(0 0 0 0);

  overflow: hidden;
}

@mixin visually-shown($position: inherit) {
  // stylelint-disable-next-line
  position: $position !important;

  width: auto;
  height: auto;
  margin: 0;

  clip: auto;

  overflow: auto;
}



/**
 * Sets a media query for the specified breakpoint
 *
 * Accepts:
 * - $media-query: {String} Breakpoint variable (list found in variables.scss)
 *
 * Usage:
 * .selector {
 *   @include media-query($medium-up) {
 *     color: red;
 *   }
 * }
 */
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      @media only screen and #{$declaration} {
        @content;
      }
      $breakpoint-found: true;
    }
  }
}

/**
 * Forces an element to self-clear its children
 *
 * Usage:
 * .selector {
 *   @include clearfix;
 * }
 */
@mixin clearfix() {

  // stylelint-disable-next-line
  *zoom: 1;
  &::after {
    content: '';

    display: table;
    clear: both;
  }
}