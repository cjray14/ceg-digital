// Globals

@mixin animation($value){
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}

@mixin animated-underline {
  padding-bottom: 5px;
  background-image: linear-gradient(transparent calc(100% - 1px), $color-medium-grey 1px);
  background-repeat: no-repeat;
  background-size: 0% 100%;
  @include transition(background-size 0.2s)

  &:hover {
    background-size: 100% 100%;
  }
}

@mixin appearance {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

@mixin banner-image {
  width: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;

  @include breakpoint('lg-viewport') {
    // Force parallax to not use js
    background-position: top center !important;
  }

  @include breakpoint('lg') {
    background-attachment: fixed;
  }
}

@mixin border-radius($value...) {
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  border-radius: $value;
}

@mixin box-sizing {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin box-shadow($value...) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}

@mixin breakpoint($breakpoint) {
  @if $breakpoint == 'custom-350' {
    @media only screen and (min-width: 350px) {
      @content;
    }
  } @else if $breakpoint == 'xs' {
    @media only screen and (min-width: 451px) {
      @content;
    }
  } @else if $breakpoint == 'custom-600' {
    @media only screen and (min-width: 600px) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media only screen and (min-width: 768px) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media only screen and (min-width: 900px) {
      @content;
    }
  } @else if $breakpoint == 'custom-1000' {
    @media only screen and (min-width: 1000px) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  } @else if $breakpoint == 'xlg' {
    @media only screen and (min-width: 1440px) {
      @content;
    }
  } @else if $breakpoint == 'xxlg' {
    @media only screen and (min-width: 1600px) {
      @content;
    }
  } @else if $breakpoint == 'xxs-viewport' {
    @media only screen and (max-width: 450px) {
      @content;
    }
  } @else if $breakpoint == 'xs-viewport' {
    @media only screen and (max-width: 767px) {
      @content;
    }
  } @else if $breakpoint == 'lg-viewport' {
    @media only screen and (max-width: 1199px) {
      @content;
    }
  } @else if $breakpoint == 'sm-viewport' {
    @media only screen and (min-width: 768px) and (max-width: 899px) {
      @content;
    }
  } @else if $breakpoint == 'md-viewport' {
    @media only screen and (min-width: 900px) and (max-width: 1199px) {
      @content;
    }
  } @else if $breakpoint == 'lg-viewport' {
    @media only screen and (min-width: 1200px) and (max-width: 1439px) {
      @content;
    }
  }
}

@mixin button-orange {
  padding: 15px 30px;
  font-size: 16px;
  background-color: $color-orange;
  border: 0;
  color: #fff;
  cursor: pointer;
  font-weight: bold;
  @include transform(perspective(1px) translateZ(0));

  &:hover {
    &::before {
      @include transform(scaleX(1));
      @include transition-timing-function(cubic-bezier(0.52, 1.64, 0.37, 0.66));
    }
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    background-color: $color-dark-grey;
    @include transform(scaleX(0));
    @include transform-origin(0 50%);
    @include transition(transform 0.5s ease-out);
  }
}

@mixin container-medium {
  position: relative;
  margin-right: 20px;
  margin-left: 20px;

  @include breakpoint('md') {
    max-width: 900px;
    margin-right: auto;
    margin-left: auto;
  }
}

@mixin container-small {
  max-width: 700px;
  margin-right: auto;
  margin-left: auto;
  position: relative;
}

@mixin container-wide {
  position: relative;
  margin-right: 20px;
  margin-left: 20px;

  @include breakpoint('lg') {
    max-width: 1200px;
    margin-right: auto;
    margin-left: auto;
  }
}

@mixin reset-lists {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin section-header {
  text-align: center;
  margin-bottom: 30px;

  @include breakpoint('md') {
    @include container-medium;
  }

  @include breakpoint('lg') {
    margin-bottom: 50px;
  }
}

@mixin transform($value...) {
  -webkit-transform: $value;
  -ms-transform: $value;
  -o-transform: $value;
  transform: $value;
}

@mixin transform-origin($value...) {
  -webkit-transform-origin: ($value);
  -moz-transform-origin: ($value);
  -o-transform-origin: $value;
  transform-origin: ($value);
}

@mixin transition($value...) {
  -webkit-transition: $value;
  -moz-transition: $value;
  -o-transition: $value;
  transition: $value;
}

@mixin transition-delay($value...) {
  -webkit-transform-delay: ($value);
  -moz-transform-delay: ($value);
  -o-transform-delay: $value;
  transform-delay: ($value);
}

@mixin transition-timing-function($value...) {
  -webkit-transition-timing-function: ($value);
  -moz-transition-timing-function: ($value);
  -o-transition-timing-function: $value;
  transition-timing-function: ($value);
}

@mixin vertical-spacer {
  margin-top: 50px;
  margin-bottom: 50px;

  @include breakpoint('lg') {
    margin-top: 65px;
    margin-bottom: 65px;
  }
}

// Grid

@mixin grid {
  display: -ms-grid;
  display: grid;
}

@mixin grid-gap($gap) {
  -ms-grid-gap: $gap;
  grid-gap: $gap;
}

@mixin grid-gap-column-row($col-gap, $col-row) {
  -ms-grid-column-gap: $col-gap;
  grid-column-gap: $col-gap;
  -ms-grid-row-gap: $col-row;
  grid-row-gap: $col-row;
}

@mixin grid-template-columns($columns...) {
  -ms-grid-columns: $columns;
  grid-template-columns: $columns;
}

@mixin grid-template-rows($rows...) {
  -ms-grid-rows: $rows;
  grid-template-rows: $rows;
}

@mixin grid-column($columns...) {
  -ms-grid-column: $columns;
  -ms-grid-column-span: $columns;
  grid-column: $columns;
}

@mixin grid-row($rows...) {
  -ms-grid-row: $rows;
  -ms-grid-row-span: $rows;
  grid-row: $rows;
}

@mixin grid-align-self($value) {
  -ms-grid-row-align: $value;
  align-self: $value;
}

@mixin grid-justify-self($value) {
  -ms-grid-column-align: $value;
  justify-self: $value;
}

// Flex

@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}

@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flexbox-inline {
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
}

@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}
